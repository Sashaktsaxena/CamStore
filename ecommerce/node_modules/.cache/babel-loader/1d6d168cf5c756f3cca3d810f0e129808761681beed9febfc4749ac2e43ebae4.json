{"ast":null,"code":"// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// import {  useMotionValue, useTransform, useAnimation } from 'framer';\n// import {MotionDiv} from 'framer-motion'\n\n// // Card component with destructured props\n// const Card = ({ image, color }) => {\n// \t// To move the card as the user drags the cursor\n// \tconst motionValue = useMotionValue(0);\n\n// \t// To rotate the card as the card moves on drag\n// \tconst rotateValue = useTransform(motionValue, [-200, 200], [-50, 50]);\n\n// \t// To decrease opacity of the card when swiped\n// \t// on dragging card to left(-200) or right(200)\n// \t// opacity gradually changes to 0\n// \t// and when the card is in center opacity = 1\n// \tconst opacityValue = useTransform(\n// \t\tmotionValue,\n// \t\t[-200, -150, 0, 150, 200],\n// \t\t[0, 1, 1, 1, 0]\n// \t);\n\n// \t// Framer animation hook\n// \tconst animControls = useAnimation();\n\n// \t// Some styling for the card\n// \t// it is placed inside the card component\n// \t// to make backgroundImage and backgroundColor dynamic\n// \tconst style = {\n// \t\tbackgroundImage: `url(${image})`,\n// \t\tbackgroundRepeat: 'no-repeat',\n// \t\tbackgroundSize: 'contain',\n// \t\tbackgroundColor: color,\n// \t\tboxShadow: '5px 10px 18px #888888',\n// \t\tborderRadius: 10,\n// \t\theight: 300\n// \t};\n\n// \treturn (\n// \t\t<div className='App'>\n// \t\t\t<MotionDiv\n// \t\t\t\tcenter\n// \t\t\t\t// Card can be drag only on x-axis\n// \t\t\t\tdrag='x'\n// \t\t\t\tx={motionValue}\n// \t\t\t\trotate={rotateValue}\n// \t\t\t\topacity={opacityValue}\n// \t\t\t\tdragConstraints={{ left: -1000, right: 1000 }}\n// \t\t\t\tstyle={style}\n// \t\t\t\tonDragEnd={(event, info) => {\n\n// \t\t\t\t\t// If the card is dragged only upto 150 on x-axis\n// \t\t\t\t\t// bring it back to initial position\n// \t\t\t\t\tif (Math.abs(info.point.x) <= 150) {\n// \t\t\t\t\t\tanimControls.start({ x: 0 });\n// \t\t\t\t\t} else {\n\n// \t\t\t\t\t\t// If card is dragged beyond 150\n// \t\t\t\t\t\t// make it disappear\n\n// \t\t\t\t\t\t// Making use of ternary operator\n// \t\t\t\t\t\tanimControls.start({ x: info.point.x < 0 ? -200 : 200 });\n// \t\t\t\t\t}\n// \t\t\t\t}}\n// \t\t\t/>\n// \t\t</div>\n// \t);\n// };\n\n// const App = () => {\n// \tconst cards = [\n// \t\t{\n// \t\t\timage: 'https://img.icons8.com/color/452/GeeksforGeeks.png',\n// \t\t\tcolor: '#55ccff'\n// \t\t},\n// \t\t{\n// \t\t\timage: 'https://img.icons8.com/color/452/GeeksforGeeks.png',\n// \t\t\tcolor: '#e8e8e8'\n// \t\t},\n// \t\t{\n// \t\t\timage: 'https://img.icons8.com/color/452/GeeksforGeeks.png',\n// \t\t\tcolor: '#0a043c'\n// \t\t},\n// \t\t{\n// \t\t\timage: 'https://img.icons8.com/color/452/GeeksforGeeks.png',\n// \t\t\tcolor: 'black'\n// \t\t}\n// \t];\n\n// }\n// export default Card;","map":{"version":3,"names":[],"sources":["C:/Users/sasha/Desktop/React/ecommerce/src/cards.jsx"],"sourcesContent":["// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n\r\n// import {  useMotionValue, useTransform, useAnimation } from 'framer';\r\n// import {MotionDiv} from 'framer-motion'\r\n\r\n\r\n// // Card component with destructured props\r\n// const Card = ({ image, color }) => {\r\n// \t// To move the card as the user drags the cursor\r\n// \tconst motionValue = useMotionValue(0);\r\n\r\n// \t// To rotate the card as the card moves on drag\r\n// \tconst rotateValue = useTransform(motionValue, [-200, 200], [-50, 50]);\r\n\r\n// \t// To decrease opacity of the card when swiped\r\n// \t// on dragging card to left(-200) or right(200)\r\n// \t// opacity gradually changes to 0\r\n// \t// and when the card is in center opacity = 1\r\n// \tconst opacityValue = useTransform(\r\n// \t\tmotionValue,\r\n// \t\t[-200, -150, 0, 150, 200],\r\n// \t\t[0, 1, 1, 1, 0]\r\n// \t);\r\n\r\n// \t// Framer animation hook\r\n// \tconst animControls = useAnimation();\r\n\r\n// \t// Some styling for the card\r\n// \t// it is placed inside the card component\r\n// \t// to make backgroundImage and backgroundColor dynamic\r\n// \tconst style = {\r\n// \t\tbackgroundImage: `url(${image})`,\r\n// \t\tbackgroundRepeat: 'no-repeat',\r\n// \t\tbackgroundSize: 'contain',\r\n// \t\tbackgroundColor: color,\r\n// \t\tboxShadow: '5px 10px 18px #888888',\r\n// \t\tborderRadius: 10,\r\n// \t\theight: 300\r\n// \t};\r\n\r\n// \treturn (\r\n// \t\t<div className='App'>\r\n// \t\t\t<MotionDiv\r\n// \t\t\t\tcenter\r\n// \t\t\t\t// Card can be drag only on x-axis\r\n// \t\t\t\tdrag='x'\r\n// \t\t\t\tx={motionValue}\r\n// \t\t\t\trotate={rotateValue}\r\n// \t\t\t\topacity={opacityValue}\r\n// \t\t\t\tdragConstraints={{ left: -1000, right: 1000 }}\r\n// \t\t\t\tstyle={style}\r\n// \t\t\t\tonDragEnd={(event, info) => {\r\n\r\n// \t\t\t\t\t// If the card is dragged only upto 150 on x-axis\r\n// \t\t\t\t\t// bring it back to initial position\r\n// \t\t\t\t\tif (Math.abs(info.point.x) <= 150) {\r\n// \t\t\t\t\t\tanimControls.start({ x: 0 });\r\n// \t\t\t\t\t} else {\r\n\r\n// \t\t\t\t\t\t// If card is dragged beyond 150\r\n// \t\t\t\t\t\t// make it disappear\r\n\r\n// \t\t\t\t\t\t// Making use of ternary operator\r\n// \t\t\t\t\t\tanimControls.start({ x: info.point.x < 0 ? -200 : 200 });\r\n// \t\t\t\t\t}\r\n// \t\t\t\t}}\r\n// \t\t\t/>\r\n// \t\t</div>\r\n// \t);\r\n// };\r\n\r\n// const App = () => {\r\n// \tconst cards = [\r\n// \t\t{\r\n// \t\t\timage: 'https://img.icons8.com/color/452/GeeksforGeeks.png',\r\n// \t\t\tcolor: '#55ccff'\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\timage: 'https://img.icons8.com/color/452/GeeksforGeeks.png',\r\n// \t\t\tcolor: '#e8e8e8'\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\timage: 'https://img.icons8.com/color/452/GeeksforGeeks.png',\r\n// \t\t\tcolor: '#0a043c'\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\timage: 'https://img.icons8.com/color/452/GeeksforGeeks.png',\r\n// \t\t\tcolor: 'black'\r\n// \t\t}\r\n// \t];\r\n\r\n// }\r\n// export default Card;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}